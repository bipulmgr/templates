version: "3.9"

# ðŸ”¹ Main group metadata
name: "Microservices Architecture"
description: "Complete microservices setup with API Gateway, Auth Service, and User Service."
techstacks:
  - name: Node.js
    iconUrl: "https://cdn.simpleicons.org/nodedotjs"
  - name: Express
    iconUrl: "https://cdn.simpleicons.org/express"
  - name: MongoDB
    iconUrl: "https://cdn.simpleicons.org/mongodb"
  - name: Redis
    iconUrl: "https://cdn.simpleicons.org/redis"
  - name: Nginx
    iconUrl: "https://cdn.simpleicons.org/nginx"
iconUrl: "https://ui-avatars.com/api/?name=Microservices+Architecture"
sharedVariable:
  ENVIRONMENT: "production"
  LOG_LEVEL: "info"

services:
  auth-service:
    type: application
    order: 2
    serviceUrl: "https://example.com/auth-service.zip"
    iconUrl: "https://example.com/nodejs.png"
    image: node:18-alpine
    ports:
      - "3001:3001"
    networks:
      - services-tier
    buildConfig:
      packages:
        - "express"
        - "jsonwebtoken"
        - "bcryptjs"
      aptPackages:
        - curl
      installCommand: "npm install"
      startCommand: "npm start"
      ports:
        - 3001

  user-service:
    type: application
    order: 3
    serviceUrl: "https://example.com/user-service.zip"
    iconUrl: "https://example.com/nodejs.png"
    image: node:18-alpine
    ports:
      - "3002:3002"
    networks:
      - services-tier
    buildConfig:
      packages:
        - "express"
        - "mongoose"
      aptPackages:
        - curl
      installCommand: "npm install"
      startCommand: "npm start"
      ports:
        - 3002

  mongodb:
    type: database
    order: 0
    serviceUrl: "https://example.com/mongodb-init.js"
    iconUrl: "https://example.com/mongodb.png"
    image: mongo:7
    volumes:
      - mongodb-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    networks:
      - database-tier
    buildConfig:
      packages: []
      aptPackages: []
      installCommand: ""
      startCommand: "mongod"
      ports:
        - 27017

  redis:
    type: database
    order: 4
    serviceUrl: "https://example.com/redis-config.conf"
    iconUrl: "https://example.com/redis.png"
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - cache-tier
    buildConfig:
      packages: []
      aptPackages: []
      installCommand: ""
      startCommand: "redis-server"
      ports:
        - 6379

volumes:
  mongodb-data:

networks:
  gateway-tier: {}
  services-tier: {}
  database-tier: {}
  cache-tier: {}
